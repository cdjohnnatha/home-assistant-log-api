# Automa√ß√£o: Relat√≥rio Di√°rio de Consumo do Ventilador do Escrit√≥rio
- id: ventilador_escritorio_relatorio_diario
  alias: "Ventilador Escrit√≥rio - Relat√≥rio Di√°rio"
  description: "Envia notifica√ß√£o di√°ria com consumo de energia do ventilador do escrit√≥rio"
  
  trigger:
    - platform: time
      at: "23:55:00"  # 5 minutos antes da meia-noite
  
  condition:
    - condition: template
      value_template: >
        {{ states('sensor.ventilador_escritorio_consumo_diario') not in ['unavailable', 'unknown'] }}
  
  action:
    # Capturar valores
    - variables:
        consumo_diario: >
          {{ states('sensor.ventilador_escritorio_consumo_diario') | float(0) | round(2) }}
        custo_diario: >
          {{ states('sensor.ventilador_escritorio_custo_diario') | float(0) | round(2) }}
        horas_hoje: >
          {{ states('sensor.ventilador_escritorio_horas_uso_diario') | float(0) | round(1) }}
        horas_semana: >
          {{ states('sensor.ventilador_escritorio_horas_uso_semanal') | float(0) | round(1) }}
        data_hoje: >
          {{ now().strftime('%d/%m/%Y') }}
    
    # Enviar notifica√ß√£o
    - service: notify.notify  # Usar o servi√ßo de notifica√ß√£o padr√£o
      data:
        title: "‚ö° Relat√≥rio Energia - Ventilador Escrit√≥rio"
        message: >
          üìÖ {{ data_hoje }}
          
          üí° Consumo: {{ consumo_diario }} kWh
          üí∞ Custo: ‚Ç¨{{ custo_diario }}
          
          {% if consumo_diario > 1.0 %}
          ‚ö†Ô∏è Consumo alto hoje!
          {% elif consumo_diario < 0.2 %}
          ‚úÖ Consumo baixo hoje.
          {% else %}
          üìä Consumo normal.
          {% endif %}
    
    # Registrar no log do Home Assistant
    - service: system_log.write
      data:
        message: >
          Ventilador Escrit√≥rio - Consumo di√°rio: {{ consumo_diario }}kWh, 
          Custo: ‚Ç¨{{ custo_diario }} ({{ data_hoje }})
        level: info
        logger: energy_monitoring.ventilador_escritorio